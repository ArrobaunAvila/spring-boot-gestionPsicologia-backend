server.port=8081
#Url donde esta el servicio de tu mysql y el nombre de la base de datos
spring.datasource.url=jdbc:sqlserver://190.145.163.157;databaseName=dbGestionPsicologica
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
#Usuario y contrasena para tu base de datos descrita en la linea anterior
spring.datasource.username=pasarela
spring.datasource.password=pasarela2020!
#spring.jpa.hibernate.ddl-auto = create-drop
spring.jndi.ignore=true
#[Opcional]Imprime en tu consola las instrucciones hechas en tu base de datos.
spring.jpa.show-sql = true
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.SQLServerDialect
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration
spring.jpa.properties.hibernate.jdbc.batch_size=100
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
#spring.jpa.properties.hibernate.generate_statistics=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl


## registerlog java ##
log.endpoint.url=http://20.96.202.69:8080
log.endpoint.oauth.method=/v1.0/auth
log.endpoint.oauth.application=bot-sofi
log.endpoint.oauth.clientId=admin-bot-sofi
log.endpoint.oauth.secretClient=B0tS0f12020$
log.endpoint.oauth.expired.minute=50
log.endpoint.log.method=/v1.0/registerlog/

###properties ELK
kibana.log.index=chatbotsofi_gesrion_psicologia_qa
kibana.log.type=chatbotsofi_gesrion_psicologia_qa
kibana.log.side.buscar.pendientes=buscar_gestiones_pendientes
kibana.log.side.registrar.gestion=registrar_gestion_psicolog
kibana.log.side.actualizar.gestion=actualizar_estado_gestion
kibana.log.side.buscar.criterios=busqueda_por_criterio
kibana.log.side.crear.usuario=crear_usuario
kibana.log.side.login=loguin
kibana.log.side.cron=cron-gestion


rest.client.conn.max.idle.time=60000
##TOKEN LOGGER
token.logger=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbi1zaXN0LWV4dGVybm8iLCJleHAiOjE2MjU3NjIxMDcsImlhdCI6MTYyNTc1ODUwN30.BBfQadWEt6ZIVRo9wy_ogOi7qPqhBjBQYd1jW7d9CXycJmaI1oUgZLrr26TibnuVHpLgsfBj1RZJm16f5I18tg
    

#QUERIE RETORNA REGISTROS
retorna.registros.query=Select P.idGestion,P.fechaRegistro,P.numDocumento,P.nombre,P.celular,P.correo,P.recibioApoyoPsicologico,E.nombre as estado from registroGestionPsicologica P,EstadoGestion E where P.idEstadoGestion<>3 and P.idEstadoGestion<>2 and E.idEstado=P.idEstadoGestion and(select count(idGestionPsicologo )from gestionPsicologo where idRegistroGestion=P.idGestion)<3

#Querie retorna por criterios
retorna.por.criterios=select P.numDocumento as numDocumento,P.celular as celular,P.correo as correo,P.fechaRegistro as fechaRegistro, P.idGestion as idGestion,P.nombre as nombre,P.recibioApoyoPsicologico as recibioApoyoPsicologico,E.nombre as estado from registroGestionPsicologica P,EstadoGestion E where P.idEstadoGestion=E.idEstado
##VALIDACION DE CRITERIO DE FECHA
pattern.date=^\\d{2}/\\d{2}/\\\d{4}$
##MENSAJE DE VALIDACION FECHA
mansaje.validacion.fecha=Formato de fecha debe ser dd/MM/yyyy
formato.de.fecha.busqueda=dd/MM/yyyy
##VALIDACION DE CRITERIO DE PASSWORD
pattern.validar.pass=^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z]).{8,20}$
##CRON DE ENVIO DE DATOS A ELASTIC
cron.expresion.send.gestion.psicologo=0 0/1 * ? * *
##ELASTIC QUERY
elastic.search.gestion={"size": 1,"_source": ["datos"],"query": {"bool": {"must": [{"query_string": {"query": "datos.idGestion.keyword:#idGestion#"}}]}}}
#ELASTIC OPERACIONES
elastic.endpoint=https://i-o-optimized-deployment-e44941.es.eastus2.azure.elastic-cloud.com:9243
elastic.method.search=chatbotsofi_qa/_search/
elastic.method.update=chatbotsofi_qa/_update_by_query/
elastic.user=elastic
elastic.password=3qlfZ1zOTquX56Q0XcMRiLhk

#ESTADO EN SESION
id.estado.sesion=4






